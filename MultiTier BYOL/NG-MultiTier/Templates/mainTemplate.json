{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "fwVmName": { "type": "string" },
    "fwVmSize_Standard_LRS": { "type": "string" },
    "fwVmSize_Premium_LRS": { "type": "string" },
    "fwVmAddress1": { "type": "string" },
    "fwVmAddress2": { "type": "string" },
    "fwVmRootPasswd": { "type": "string" },
    "fwSubnetName": { "type": "string" },
    "fwSubnetAddress": { "type": "string" },
    "tier1SubnetName": { "type": "string" },
    "tier1SubnetAddress": { "type": "string" },
    "tier2SubnetName": { "type": "string" },
    "tier2SubnetAddress": { "type": "string" },
    "tier3SubnetName": { "type": "string" },
    "tier3SubnetAddress": { "type": "string" },
    "publicIpName": { "type": "string" },
    "publicIpDnsName": { "type": "string" },
    "publicIpAddressType": { "type": "string" },
    "publicIpNewOrNone": { "type": "string" },
    "newStorageAccountName": { "type": "string" },
    "newStorageAccountType": { "type": "string" },
    "vnetName": { "type": "string" },
    "vnetAddressSpace": { "type": "string" },
    "lbName": { "type": "string" },
    "haSetName": { "type": "string" },
    "fwVmCount": { "type": "string" },
    "location": { "type": "string" }
  },
  "variables": {
    "imageSku": "byol",
    "location": "[parameters( 'location' )]",
    "fwVmSize": "[parameters( concat( 'fwVmSize_', parameters( 'newStorageAccountType' )))]",
    "nicName": "[concat( 'ngfNIC-', replace(resourceGroup().name, '-', ''))]",
    "adminUsername": "will_be_replaced_by_root",
    "osType": "linux",
    "vnetId": "[resourceId('Microsoft.Network/virtualNetworks',parameters( 'vnetName' ))]",
    "storageId": "[resourceId( 'Microsoft.Storage/storageAccounts', parameters( 'newStorageAccountName' ))]",
    "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters( 'fwSubnetName' ))]",
    "publicIpRef": "[resourceId( 'Microsoft.Network/publicIPAddresses', parameters( 'publicIPName' ))]",
    "publicIpDependency": "[resourceId( 'Microsoft.Resources/deployments', 'publicIp' )]",
    "routeTableName": "[concat('default-via-', replace(parameters('fwVmName'), '-', ''))]",
    "apiVersion": "2015-06-15",
    "fwSubnetSplit": "[split( parameters( 'fwSubnetAddress' ), '/' )]",
    "fwSubnetAddrSplit": "[split( variables( 'fwSubnetSplit' )[0], '.' )]",
    "fwSubnetMask": "[variables( 'fwSubnetSplit' )[1]]",
    "fwSubnetRef": "[concat( variables( 'vnetID' ), '/subnets/', parameters( 'fwSubnetName' ) )]",
    "fwSubnetDefaultGw": "[concat( variables( 'fwSubnetAddrSplit' )[0], '.', variables( 'fwSubnetAddrSplit' )[1], '.', variables( 'fwSubnetAddrSplit' )[2], '.', add( int( variables( 'fwSubnetAddrSplit' )[3]), 1 ))]",
    "artifactsUriBase": "https://raw.githubusercontent.com/bartekmo/AzureSolutionTemplates/master/MultiTier%20BYOL/NG-MultiTier/Templates/",
    "deployByCountUri": "[concat( variables( 'artifactsUriBase' ), parameters( 'fwVmCount' ), '.json' )]",
    "deployPublicIpUri": "[concat( variables( 'artifactsUriBase' ), 'publicIp-', parameters( 'publicIpNewOrNone' ), '.json' )]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('newStorageAccountName')]",
      "apiVersion": "[variables( 'apiVersion' )]",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[parameters('newStorageAccountType')]"
      }
    },
    {
      "name": "publicIp",
      "apiVersion": "2016-06-01",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables( 'deployPublicIpUri' )]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "publicIpName": {
            "value": "[parameters( 'publicIpName' )]"
          },
          "publicIpDnsName": {
            "value": "[parameters( 'publicIpDnsName' )]"
          },
          "publicIpAddressType": {
            "value": "[parameters( 'publicIpAddressType' )]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('routeTableName')]",
      "apiVersion": "[variables( 'apiVersion' )]",
      "location": "[variables('location')]",
      "properties": {
        "routes": [
          {
            "name": "defaultRouteViaNG",
            "properties": {
              "addressPrefix": "0.0.0.0/0",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('fwVmAddress1')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "apiVersion": "[variables( 'apiVersion' )]",
      "location": "[variables('location')]",
      "dependsOn": [ "[concat('Microsoft.Network/routeTables/', variables('routeTableName'))]" ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters( 'fwSubnetName' )]",
            "properties": {
              "addressPrefix": "[parameters( 'fwSubnetAddress' )]"
            }
          },
          {
            "name": "[parameters( 'tier1SubnetName' )]",
            "properties": {
              "addressPrefix": "[parameters( 'tier1SubnetAddress' )]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters( 'tier2SubnetName' )]",
            "properties": {
              "addressPrefix": "[parameters( 'tier2SubnetAddress' )]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          },
          {
            "name": "[parameters( 'tier3SubnetName' )]",
            "properties": {
              "addressPrefix": "[parameters( 'tier3SubnetAddress' )]",
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters( 'fwVmCount' )]",
      "apiVersion": "2016-06-01",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "[variables( 'vnetId' )]",
        "[variables( 'storageId' )]",
        "[variables( 'publicIpDependency' )]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables( 'deployByCountUri' )]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "haSetName": {
            "value": "[parameters( 'haSetName' )]"
          },
          "lbName": {
            "value": "[parameters( 'lbName' )]"
          },
          "fwVmName": {
            "value": "[parameters( 'fwVmName' )]"
          },
          "fwVmSize": {
            "value": "[variables( 'fwVmSize' )]"
          },
          "fwVmRootPasswd": {
            "value": "[parameters( 'fwVmRootPasswd' )]"
          },
          "fwVmAddress1": {
            "value": "[parameters( 'fwVmAddress1' )]"
          },
          "fwVmAddress2": {
            "value": "[parameters( 'fwVmAddress2' )]"
          },
          "fwSubnetRef": {
            "value": "[variables( 'fwSubnetRef' )]"
          },
          "fwSubnetAddress": {
            "value": "[parameters( 'fwSubnetAddress' )]"
          },
          "fwSubnetDefaultGw": {
            "value": "[variables( 'fwSubnetDefaultGw' )]"
          },
          "publicIpRef": {
            "value": "[variables( 'publicIpRef' )]"
          },
          "imageSku": {
            "value": "[variables( 'imageSku' )]"
          },
          "newStorageAccountName": {
            "value": "[parameters( 'newStorageAccountName' )]"
          },
          "location": {
            "value": "[parameters( 'location' )]"
          }
        }
      }

    }
  ],
  "outputs": {
    "publicIpDomainAddress": {
      "type": "string",
      "value": "[concat( parameters( 'publicIpDnsName' ), '.', parameters( 'location' ), '.cloudapp.azure.com' )]"
    }

  }
}
